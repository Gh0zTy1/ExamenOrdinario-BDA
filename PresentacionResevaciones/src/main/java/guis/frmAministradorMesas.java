/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guis;

import dto.MesaDTO;
import dto.RestauranteDTO;
import dto.TipoMesaDTO;
import dto.UbicacionMesaDTO;
import excepciones.NegocioException;
import fabricas.fabricaFCD;
import iFachadas.ICargarMesasFCD;
import iFachadas.IagregarMesasFCD;
import java.awt.GridLayout;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author caarl
 */
public class frmAministradorMesas extends javax.swing.JFrame {
    /**
     * Creates new form frmAministradorMesas
     */
    public frmAministradorMesas() {        
        initComponents();
      cargarMesasEnTabla();
        
        
       
    }
    
    private void cargarMesasEnTabla() {
    try {
        // Obtener la instancia de la fachada desde la fábrica
        ICargarMesasFCD fachadaMesas = fabricaFCD.fabricaFCDCargarMesas();

        // Llamar al método de la fachada para cargar las mesas
        Long idRestaurante = 1L; // Cambia esto según el contexto de tu aplicación
        List<MesaDTO> mesas = fachadaMesas.cargarMesas(idRestaurante);

        // Configurar el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tblMesas.getModel();
        modelo.setRowCount(0); // Limpiar la tabla antes de agregar nuevas filas

        // Poblar la tabla con las mesas obtenidas
        for (MesaDTO mesa : mesas) {
            modelo.addRow(new Object[]{
                mesa.getId(),
                mesa.getCodigo(),
                mesa.getUbicacion().toString(),
                mesa.getTipoMesa().getNombre()
            });
        }
    } catch (NegocioException x) {
        JOptionPane.showMessageDialog(this, "Error al cargar mesas: " + x.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMesas = new javax.swing.JTable();
        btnAgregarMesa = new javax.swing.JButton();
        btnEliminarMesa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("Administrador Mesas");

        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        tblMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Codigo", "Ubicacion", "Tipo mesa"
            }
        ));
        jScrollPane1.setViewportView(tblMesas);

        btnAgregarMesa.setText("Agregar Mesas");
        btnAgregarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMesaActionPerformed(evt);
            }
        });

        btnEliminarMesa.setText("Eliminar Mesa");
        btnEliminarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMesaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregarMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnAtras))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarMesa)
                    .addComponent(btnAgregarMesa))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMesaActionPerformed
try {
    // Crear los JComboBox con las opciones
    JComboBox<String> cmbTiposMesa = new JComboBox<>(new String[]{"Pequeña", "Mediana", "Grande"});
    JComboBox<String> cmbUbicaciones = new JComboBox<>(new String[]{"GENERAL", "VENTANA", "TERRAZA"});

    // Crear el panel para el JOptionPane
    JPanel panel = new JPanel(new GridLayout(2, 2, 10, 10));
    panel.add(new JLabel("Seleccione el tipo de mesa:"));
    panel.add(cmbTiposMesa);
    panel.add(new JLabel("Seleccione la ubicación:"));
    panel.add(cmbUbicaciones);

    // Mostrar el JOptionPane
    int resultado = JOptionPane.showConfirmDialog(this, panel, "Agregar Mesa", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

    if (resultado == JOptionPane.OK_OPTION) {
        // Obtener los valores seleccionados
        String tipoMesaSeleccionado = cmbTiposMesa.getSelectedItem().toString();
        String ubicacionSeleccionada = cmbUbicaciones.getSelectedItem().toString();

        // Obtener las primeras tres letras de la ubicación (GEN, VEN, TER)
        String ubicacionCodigo = ubicacionSeleccionada.substring(0, 3).toUpperCase();

        // Definir la capacidad según el tipo de mesa
        int capacidad = 0;
        switch (tipoMesaSeleccionado) {
            case "Pequeña":
                capacidad = 2; // 1-2 personas
                break;
            case "Mediana":
                capacidad = 4; // 3-4 personas
                break;
            case "Grande":
                capacidad = 8; // 5-8 personas
                break;
        }

        // Generar el código de la mesa (ubicacion-capacidad)
        String codigoMesa = ubicacionCodigo + "-" + capacidad;

        // Construir los DTO necesarios
        TipoMesaDTO tipoMesa = new TipoMesaDTO(tipoMesaSeleccionado);  // DTO del tipo de mesa
        UbicacionMesaDTO ubicacion = UbicacionMesaDTO.valueOf(ubicacionSeleccionada.toUpperCase());  // DTO de la ubicación

        // Obtener el restaurante actual (puedes obtenerlo desde el contexto de tu aplicación)
        RestauranteDTO restauranteDTO = new RestauranteDTO();
        restauranteDTO.setId(1L); // Asigna el ID de tu restaurante según corresponda

        // Crear el DTO de la mesa
        MesaDTO mesaDTO = new MesaDTO(codigoMesa, tipoMesa, ubicacion);
        mesaDTO.setRestaurante(restauranteDTO); // Asociar el restaurante con la mesa

        // Enviar a la fachada para agregar la mesa
        IagregarMesasFCD fachadaMesas = fabricaFCD.fabricaFCDAgregarMesas();  // Obtener la instancia de la fachada

        // Llamar a la fachada para agregar la mesa
        fachadaMesas.agregarMesas(mesaDTO);  

        // Mensaje de éxito
        JOptionPane.showMessageDialog(this, "Mesa agregada con éxito. Código de la mesa: " + codigoMesa);
    }
} catch (Exception ex) {
    // Manejo de errores
    JOptionPane.showMessageDialog(this, "Error al agregar la mesa: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnAgregarMesaActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
       frmMenu men = new frmMenu();
        men.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnEliminarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarMesaActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMesa;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnEliminarMesa;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMesas;
    // End of variables declaration//GEN-END:variables
}
